package statik

import (
	"github.com/rakyll/statik/fs"
)

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x00\xcb\x965I\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00css/hing.cssbody {\n  padding-top: 25px;\n  padding-left: 25px;\n}\n\n.glyphicon.fast-right-spinner {\n    -webkit-animation: glyphicon-spin-r 1s infinite linear;\n    animation: glyphicon-spin-r 1s infinite linear;\n}\n\n\n@-webkit-keyframes glyphicon-spin-r {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n\n@keyframes glyphicon-spin-r {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n\n@-webkit-keyframes glyphicon-spin-l {\n    0% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n\n    100% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n}\n\n@keyframes glyphicon-spin-l {\n    0% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n\n    100% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n}\nPK\x07\x08\x81\xfbb\\@\x04\x00\x00@\x04\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xcaH9I\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00index.html<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\n    <title>hing</title>\n\n    <!-- Bootstrap -->\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"/css/hing.css\">\n    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n      <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n      <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n  </head>\n  <body>\n          <div class=\"row play\">\n                  <div class=\"col-md-4\">\n                          <span class=\"glyphicon glyphicon-play\" data-toggle=\"modal\" data-target=\"#newping\" id=\"startbutton\" aria-hidden=\"true\"></span>\n                          <span class=\"glyphicon glyphicon-stop\" id=\"stopbutton\" style=\"visibility:hidden\" aria-hidden=\"true\"></span>\n                          <span class=\"glyphicon glyphicon-repeat fast-right-spinner\" id=\"spinner\" style=\"visibility:hidden\"></span>\n                  </div>\n                  <di class=\"col-m4-8\">\n                          <div class=\"col-md-8\"><div class=\"container\" id=\"statistics\"></div></div>\n                  </div>\n          </div>\n\n          <!-- Modal -->\n          <div class=\"modal fade\" id=\"newping\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"newPingLabel\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                  <h4 class=\"modal-title\" id=\"newPingLabel\">Run a ping</h4>\n                </div>\n                <div class=\"modal-body\">\n                        <form class=\"form-horizontal\">\n                          <div class=\"form-group\">\n                            <label for=\"inputAddress\" class=\"col-sm-2 control-label\">Adress</label>\n                            <div class=\"col-sm-10\">\n                              <input type=\"url\" class=\"form-control\" id=\"inputAddress\" placeholder=\"http://\">\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"inputReqSleep\" class=\"col-sm-2 control-label\">Seconds between pings</label>\n                            <div class=\"col-sm-10\">\n                              <input type=\"number\" class=\"form-control\" id=\"inputReqSleep\" value=\"1\">\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                            <label for=\"inputTimeout\" class=\"col-sm-2 control-label\">Timeout</label>\n                            <div class=\"col-sm-10\">\n                              <input type=\"number\" class=\"form-control\" id=\"inputTimeout\" value=\"1\">\n                            </div>\n                          </div>\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Nope</button>\n                  <button type=\"button\" class=\"btn btn-primary\" id=\"goButton\">Go!</button>\n          </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n                  <div class=\"col-md-12\"><canvas id=\"rtchart\" width=\"200\" height=\"50\"></canvas></div>\n          </div>\n          <br>\n          <div class=\"row\">\n                  <div class=\"col-md-12\"><canvas id=\"tracechart\" width=\"200\" height=\"50\"></canvas></div>\n          </div>\n          <br>\n          <!--\n          <div class=\"row\">\n\n          </div>\n  -->\n          <br>\n          <div class=\"row\">\n                  <div class=\"col-md-6\">Output:<div class=\"container\" id=\"messages\"></div></div>\n                  <div class=\"col-md-6\"><canvas id=\"codechart\" width=\"200\" height=\"50\"></div></div>\n          </div>\n\n\n    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n    <!-- Include all compiled plugins (below), or include individual files as needed -->\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.2/Chart.bundle.min.js\"></script>\n    <script src=\"js/hing.js\"></script>\n  </body>\n</html>\nPK\x07\x08\x05\xbd\xb6h\xea\x13\x00\x00\xea\x13\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xf6{1I\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00js/chart.js$(document).ready(function(){\nvar n = 40,\n    random = d3.randomNormal(0, .2),\n    //data = d3.range(n).map(random);\n\n    //data = [0]\n    data = d3.range(n)\n\nvar svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 20, left: 40},\n    width = +svg.attr(\"width\") - margin.left - margin.right,\n    height = +svg.attr(\"height\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar x = d3.scaleLinear()\n    .domain([1, n - 2])\n    .range([0, width]);\n\nvar y = d3.scaleLinear()\n    .domain([0, 1])\n    .range([height, 0]);\n\nvar line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d, i) { return x(i); })\n    .y(function(d, i) { return y(d); });\n\ng.append(\"defs\").append(\"clipPath\")\n    .attr(\"id\", \"clip\")\n  .append(\"rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\ng.append(\"g\")\n    .attr(\"class\", \"axis axis--x\")\n    .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n    .call(d3.axisBottom(x));\n\ng.append(\"g\")\n    .attr(\"class\", \"axis axis--y\")\n    .call(d3.axisLeft(y));\n\ng.append(\"g\")\n    .attr(\"clip-path\", \"url(#clip)\")\n  .append(\"path\")\n    .datum(data)\n    .attr(\"class\", \"line\")\n  .transition()\n    .duration(700)\n    .ease(d3.easeLinear)\n    .on(\"start\", tick);\n\nfunction tick() {\n\n  // Push a new data point onto the back.\n  data.push(updateData());\n\n  // Redraw the line.\n  d3.select(this)\n      .attr(\"d\", line)\n      .attr(\"transform\", null);\n\n  // Slide it to the left.\n  d3.active(this)\n      .attr(\"transform\", \"translate(\" + x(0) + \",0)\")\n    .transition()\n      .on(\"start\", tick);\n\n  // Pop the old data point off the front.\n  data.shift();\n\n\n}\n\nfunction updateData() {\n  $.ajax({\n    url: '/result',\n    async: false,\n    dataType: 'json',\n    success: function (json) {\n      time = json.Time;\n   }\n  });\n  return time;\n\n}\n});\nPK\x07\x08\x0b\xa4\xa5o?\x07\x00\x00?\x07\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00FA8I\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00js/hing.js$(function() {\n  var statistics = {\n          url: \"\",\n          numRequests: 0,\n          statusCodes: {},\n          errors: {},\n          rts: [],\n          Codes: function() {\n                  tmp = {};\n                  for (var key in statistics.statusCodes) {\n                         tmp[key] = statistics.statusCodes[key];\n                  }\n                  return tmp;\n          },\n          NumRequests: function() {\n                  return statistics.rts.length;\n          },\n          Calculated: function() {\n                var tot = 0;\n                var slowest;\n                var fastest;\n                for (var i in statistics.rts) {\n                        tot = tot + statistics.rts[i];\n                        if (statistics.rts[i] >= slowest || typeof slowest === \"undefined\") {\n                                slowest = statistics.rts[i];\n                        }\n                        if (statistics.rts[i] <= fastest || typeof fastest == \"undefined\") {\n                                fastest = statistics.rts[i];\n                        }\n                }\n                return {Mean: Number(tot/statistics.NumRequests()).toFixed(3), Fastest: Number(fastest).toFixed(3), Slowest: Number(slowest).toFixed(3)}\n\n          }\n  }\n  var ctx = $(\"#rtchart\");\n\n  var data = {\n    labels: [], // empty for now\n    datasets: [\n      {\n        label: \"HTTP response times\",\n        backgroundColor: \"#36A2EB\",\n        data: [] // empty for now\n      }\n    ]\n  };\n\n  var rtchart = new Chart(ctx, {\n    type: 'line',\n    data: data,\n    fill: true,\n  });\n\n  var ctx2 = $(\"#tracechart\");\n\n  var tracedata = {\n    labels: [], // empty for now\n    datasets: [\n      {\n        label: \"Dns lookup\",\n        backgroundColor: \"#36A2EB\",\n        fill: false,\n        data: [] // empty for now\n      },\n      {\n        label: \"Connection\",\n        backgroundColor: \"#FF6384\",\n        fill: false,\n        data: [] // empty for now\n     },\n     {\n       label: \"Request write\",\n       backgroundColor: \"#FFCE56\",\n       fill: false,\n       data: [] // empty for now\n    },\n    {\n      label: \"Request to first byte\",\n      backgroundColor: \"#EC30E4\",\n      fill: false,\n      data: [] // empty for now\n   },\n   {\n     label: \"Read response time\",\n     backgroundColor: \"#61D512\",\n     fill: false,\n     data: [] // empty for now\n  },\n    ]\n  };\n\n  var tracechart = new Chart(ctx2, {\n    type: 'line',\n    data: tracedata,\n    fill: true,\n  });\n\n  var ctx3 = $(\"#codechart\");\n  var codedata = {\n          labels: [], // empty for now\n          datasets: [\n                  {\n                  data: [], // empty for now\n                  backgroundColor: [\n                  \"#FF6384\",\n                  \"#36A2EB\",\n                  \"#FFCE56\"\n                  ],\n                  hoverBackgroundColor: [\n                          \"#FF6384\",\n                          \"#36A2EB\",\n                          \"#FFCE56\"\n                  ]\n                }\n          ]\n  };\n  var codechart = new Chart(ctx3,{\n      type: 'pie',\n      data: codedata,\n  });\n\n  function receiveUpdate(obj) {\n          statistics.rts.push(obj.Time);\n          var stats = statistics.Calculated();\n\n          var style = \"black\"\n          if (obj.StatusCode >= 399) {\n                  style = \"red\";\n          }\n          if (obj.Error != \"\") {\n                  style = \"red\";\n                  obj.StatusCode = obj.Error;\n          }\n\n          $('#messages').prepend(\"<li><span style='color:\" + style + \"'>HTTP Response seq=\" + obj.Seq +  \" status=\" +  obj.StatusCode + \" time=\" + Number(obj.Time).toFixed(3) + \"</span></li>\" );\n          $('#statistics').html(\"\");\n          $('#statistics').html(\"Testing: \" + statistics.url + \" Mean: \" + stats.Mean + \" Slowest: \" + stats.Slowest + \" Fastest: \" + stats.Fastest);\n\n          // Update rtgraph\n          var d = new Date();\n          var label = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds()\n          data.labels.push(label);\n          data.datasets[0].data.push(Number(obj.Time).toFixed(3));\n          rtchart.update();\n\n          tracedata.labels.push(label);\n          tracedata.datasets[0].data.push(Number(obj.DNSLookupTime).toFixed(5));\n          tracedata.datasets[1].data.push(Number(obj.ConnectionTime).toFixed(5));\n          tracedata.datasets[2].data.push(Number(obj.WriteRequestTime).toFixed(5));\n          tracedata.datasets[3].data.push(Number(obj.WrittenToFirstByteTime).toFixed(5));\n          tracedata.datasets[4].data.push(Number(obj.ReadResponseTime).toFixed(5));\n          tracechart.update();\n\n          // Update status code chart\n          if (typeof statistics.statusCodes[obj.StatusCode] === \"undefined\") {\n                  statistics.statusCodes[obj.StatusCode] = 1;\n          } else {\n                  statistics.statusCodes[obj.StatusCode] = statistics.statusCodes[obj.StatusCode] + 1;\n          }\n\n          codedata.labels = [];\n          codedata.datasets[0].data = [];\n          codes = statistics.Codes();\n          for (var key in codes) {\n                  codedata.labels.push(key);\n                  codedata.datasets[0].data.push(codes[key]) ;\n          }\n          codechart.update();\n  }\n\n  $('#stopbutton').on('click', function(e) {\n          $.ajax({\n                  type: \"POST\",\n                  url: \"/target\",\n                  dataType: 'json',\n                  async: false,\n                  data: JSON.stringify({\"stop\": true}),\n                  success: function () {\n                          console.log(\"Yes\");\n                }\n          })\n          // Hide stop button\n          $('#stopbutton').css(\"visibility\", \"hidden\");\n\n          // Hide spinner\n          $('#spinner').css(\"visibility\", \"hidden\");\n\n          // Show start button\n          $('#startbutton').css(\"visibility\", \"visible\");\n  })\n\n  $('#goButton').on('click', function (e) {\n          // Clear statistics\n          statistics.statusCodes = {};\n          statistics.errors = {};\n          statistics.rts = [];\n          statistics.url = $('#inputAddress').val();\n\n          // Clear graphs\n          data.labels = [];\n          data.datasets[0].data = [];\n          rtchart.update();\n\n          tracedata.labels = [];\n          tracedata.datasets[0].data = [];\n          tracedata.datasets[1].data = [];\n          tracedata.datasets[2].data = [];\n          tracedata.datasets[3].data = [];\n          tracedata.datasets[4].data = [];\n          tracechart.update();\n\n          codedata.labels = [];\n          codedata.datasets[0].data = [];\n          codechart.update();\n\n          // Clear messages\n          $('#messages').html(\"\");\n\n          // Send a post to start the actual job\n          $.ajax({\n                  type: \"POST\",\n                  url: \"/target\",\n                  dataType: 'json',\n                  async: false,\n                  data: JSON.stringify({\n                          url: $('#inputAddress').val(),\n                          sleepreq: parseInt($('#inputReqSleep').val()),\n                          timeout: parseInt($('#inputTimeout').val())\n                  }),\n                  success: function () {\n                          console.log(\"Yes\");\n                }\n          })\n\n          // Hide modal\n          $('#newping').modal('hide');\n\n          // Hide start button\n          $('#startbutton').css(\"visibility\", \"hidden\");\n\n          // Show spinner\n          $('#spinner').css(\"visibility\", \"visible\");\n\n          // Show stop button\n          $('#stopbutton').css(\"visibility\", \"visible\");\n\n  });\n\n  var loc = window.location;\n  var ws_url = \"ws://\" + loc.host + \"/ws\";\n  var ws = new WebSocket(ws_url);\n  ws.onmessage = function(e) {\n    var obj = JSON.parse(e.data);\n    receiveUpdate(obj)\n  };\n\n  // Does not work\n  $(window).on('beforeunload', function(){\n    ws.close();\n  });\n\n});\nPK\x07\x080G\"\x16\x98\x1e\x00\x00\x98\x1e\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xcb\x965I\x81\xfbb\\@\x04\x00\x00@\x04\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x00\x00\x00\x00css/hing.cssPK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xcaH9I\x05\xbd\xb6h\xea\x13\x00\x00\xea\x13\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81z\x04\x00\x00index.htmlPK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xf6{1I\x0b\xa4\xa5o?\x07\x00\x00?\x07\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x9c\x18\x00\x00js/chart.jsPK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00FA8I0G\"\x16\x98\x1e\x00\x00\x98\x1e\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x14 \x00\x00js/hing.jsPK\x05\x06\x00\x00\x00\x00\x04\x00\x04\x00\xe3\x00\x00\x00\xe4>\x00\x00\x00\x00"
	fs.Register(data)
}
